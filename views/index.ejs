<!DOCTYPE html>
<html>
  <head>
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta charset="UTF-8">
    <title>Chat App</title>
    <script src="./scripts/dragAndDropHelper.js"></script>
    <script src="./scripts/ModalDialog.js"></script>
    <style>
      .forms-container {
        display: flex;
		  flex-wrap: wrap;
      }
      .file-input-container {
        position: relative;
        width: 30px;
        height: 30px;
      }
      .file-input {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0;
      }
      .upload-button {
        width: 20px;
        height: 20px;
        display: flex;
        justify-content: center;
        align-items: center;
        border: 2px dashed #ccc;
        border-radius: 50%;
        font-size: 24px;
        font-weight: bold;
        color: #555;
      }
      .pdf-actions {
        margin-top: 20px;
      }
		.header-container{
			display: flex;
			justify-content: space-between;
		}
		.auth-container{
			display: flex;
			align-items: center;
			gap: 10px;
		}
		.btn {
			background-color: transparent;
			padding: 5px 10px;
			border: 1px solid #ccc;
			border-radius: 5px;
			text-decoration: none;
			color: #333;
			transition: all 0.3s;
		}
		.btn:hover {
			cursor: pointer;
			background-color: #dccccc;
		}
		.btn__send{
			margin-left: 10px;
		}
		.btn__send:disabled{
			background-color: #cccccca8;
			cursor: not-allowed;
		}
		.username-msg {
			margin: 3px;
			font-weight: 700;
		}
		.user-msg {
			padding-left: 15px;
			font-style: italic;
		}
		.message {
			list-style: none; 
			margin-bottom: 10px
		}
    </style>
  </head>
  <body>	
    <div class="header-container">
		<h1>Chat Room</h1>
			 <div class="auth-container">
				<a class="btn" href="<%= user ? '/auth/logout' : 'auth/login' %>"><%= user ? `Logout (${user.name})` : 'Login' %></a>
				<% if(!user) { %>
					<a class="btn" href="auth/signup">Sing Up</a>
				<% } %>
			 </div>
	 </div>
    <div
      id="dropZone"
      style="border: 2px dashed #ccc; padding: 20px; margin-bottom: 20px;"
    >
      <ul id="messages">
        <% messages.forEach(function(message) { %>
        <li class="message">
			<p class="username-msg"><%= message.userName %></p>
          <% if (message.fileData) { %>
          <img src="<%= message.fileData %>" style="max-width: 80px" />
          <% } %> <% if (message.msg) { %>
          <span class="user-msg"> <%= message.msg %> </span>
          <% } %>
        </li>
        <% }); %>
      </ul>
      <% if (!hideTools) { %>
      <div class="forms-container">
        <form
          id="uploadForm"
          action="/upload"
          method="post"
          enctype="multipart/form-data"
        >
          <div class="file-input-container">
            <div class="upload-button">+</div>
            <input
              type="file"
              id="fileInput"
              name="file"
              class="file-input"
              accept="image/*"
            />
          </div>
        </form>

        <form id="form" action="">
          <input id="input" autocomplete="off" /><button id="sendButton" class="btn btn__send">Send</button>
        </form>
      </div>
      <% } %>
    </div>
    <% if (!hideTools) { %>
    <div class="pdf-actions">
      <button class="btn" id="savePdfButton">Save Chat as PDF</button>

      <form id="emailPdfForm">
        <input
          type="email"
          id="emailInput"
          placeholder="Enter email"
          required
        />
        <button class="btn" type="submit">Send Chat as PDF</button>
      </form>
    </div>
    <% } %>

    <script type="module">
      const ws = new WebSocket('ws://chat-users-production.up.railway.app')

      const form = document.getElementById('form')
      const input = document.getElementById('input')
      const messages = document.getElementById('messages')
      const uploadForm = document.getElementById('uploadForm')
      const fileInput = document.getElementById('fileInput')
      const savePdfButton = document.getElementById('savePdfButton')
      const emailPdfForm = document.getElementById('emailPdfForm')
      const emailInput = document.getElementById('emailInput')
		const sendButton = document.getElementById('sendButton')
		const userId = '<%= user && user.id ? user.id : null%>'
		const userName = '<%= user && user.name ? user.name : null%>'

		//hint fo the user button
		sendButton.addEventListener('mouseover', () => {
			if (!userId) {
				sendButton.setAttribute('title', 'Please login to send messages.')
				sendButton.disabled = true	
			}
		})
		sendButton.addEventListener('mouseout', () => {
			if (!userId) {
				sendButton.removeAttribute('title')
				sendButton.disabled = false
			}
		})

      form.addEventListener('submit', (e) => {
        e.preventDefault()
		  if (!userId) {
			 alert('Please login to send messages.')
			 return
		  }
        if (input.value && userId) {
          ws.send(JSON.stringify({ userID: userId, msg: input.value }))
          input.value = ''
        }
      })

      fileInput.addEventListener('change', async (event) => {
        const file = event.target.files[0]
        if (file && file.type.startsWith('image/')) {
          const reader = new FileReader()
          reader.onload = (e) => {
            const fileContent = e.target.result
            new ModalDialog(file, fileContent, (data) => {
              ws.send(JSON.stringify(data))
            })
          }
          reader.readAsDataURL(file)
        } else {
          console.error('Тільки файли зображень дозволені.')
        }
      })

      ws.onmessage = (event) => {
        const item = document.createElement('li')
		  const user = document.createElement('p')
		  user.className = 'username-msg'
		  item.className = 'message'
			
		  user.textContent = userName
		  item.append(user)
        const msgData = JSON.parse(event.data)
        if (msgData.fileData) {
          const img = document.createElement('img')
          img.src = msgData.fileData
          img.style.maxWidth = '80px'
          item.append(img)
        }
        if (msgData.msg) {
          const span = document.createElement('span')
			 span.className = 'user-msg'
          span.textContent = msgData.msg
          item.append(span)
        }
        messages.appendChild(item)
      }

      savePdfButton.addEventListener('click', async () => {
        try {
          const response = await fetch('/generate-pdf', { method: 'POST' })
          if (response.ok) {
            const blob = await response.blob()
            const url = window.URL.createObjectURL(blob)
            const a = document.createElement('a')
            a.href = url
            a.download = 'chat.pdf'
            a.click()
            window.URL.revokeObjectURL(url)
          } else {
            console.error('Failed to generate PDF')
          }
        } catch (error) {
          console.error('Error:', error)
        }
      })

      emailPdfForm.addEventListener('submit', async (e) => {
        e.preventDefault()
        try {
          const response = await fetch('/send-pdf', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ email: emailInput.value }),
          })
          if (response.ok) {
            alert('PDF sent to email.')
          } else {
            console.error('Failed to send PDF')
          }
        } catch (error) {
          console.error('Error:', error)
        }
      })

      const dropZone = new DragAndDrop('dropZone', (filePath, fileContent) => {
        new ModalDialog(filePath, fileContent, (data) => {
          ws.send(JSON.stringify(data))
        })
      })
    </script>
  </body>
</html>
